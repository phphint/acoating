version: '3.8'

services:
  nextjs-app:
    container_name: nextjs-app
    build: 
      context: ./nextjs-app
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
    volumes:
      - ./nextjs-app:/app
      - /app/node_modules
      - /app/.next  # This line adds a Docker-managed volume for the .next directory

    networks:
      - proxy_app-network
    mem_limit: 1024M
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}          # Use environment variable from .env file
      VIRTUAL_HOST: dev.acoating.com
      LETSENCRYPT_HOST: dev.acoating.com
      LETSENCRYPT_EMAIL: jason@mavacode.com
    restart: always                 # Ensure the container always restarts


  strapi:
    build:
      context: ./strapi-cms  # Local path to the cloned repository
      dockerfile: Dockerfile  # Ensure this Dockerfile is in the root of your repo
    container_name: strapi-app
    environment:
     DATABASE_CLIENT: postgres
     DATABASE_NAME: ${STRAPI_DATABASE_NAME}
     DATABASE_USERNAME: ${STRAPI_DATABASE_USERNAME}
     DATABASE_PASSWORD: ${STRAPI_DATABASE_PASSWORD}
     DATABASE_HOST: postgres  # This should match the service name of PostgreSQL in Docker Compose
     DATABASE_PORT: ${DATABASE_PORT}  # Ensure this matches the port exposed by the PostgreSQL service, typically 5432
     DATABASE_SSL: false
     NODE_ENV: ${NODE_ENV}
     VIRTUAL_HOST: strapi.acoating.com
     LETSENCRYPT_HOST: strapi.acoating.com
     LETSENCRYPT_EMAIL: jason@mavacode.com
    volumes:
      - strapi-data:/app  # Mounts the volume to the application directory
    ports:
      - "1337:1337"
    networks:
      - proxy_app-network
    depends_on:
      - postgres
    restart: always
    mem_limit: 512m  # Limit memory to 512 MB

networks:
  proxy_app-network:
    external: true
