version: '3.8'

services:
  nextjs-app:
    container_name: nextjs-app
    build: 
      context: ./nextjs-app
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
    volumes:
      - ./nextjs-app:/app
      - /app/node_modules
      - /app/.next  # This line adds a Docker-managed volume for the .next directory

    networks:
      - proxy_app-network
    mem_limit: 1024M
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}          # Use environment variable from .env file
      VIRTUAL_HOST: dev.acoating.com
      LETSENCRYPT_HOST: dev.acoating.com
      LETSENCRYPT_EMAIL: jason@mavacode.com
    restart: always                 # Ensure the container always restarts

  strapi-cms:
    container_name: strapi-cms
    image: strapi/strapi
    command: strapi develop
    volumes:
      - ./strapi-cms:/srv/app
      - /srv/app/node_modules
    networks:
      - proxy_app-network
    mem_limit: 256M
    ports:
      - "1337:1337"  # Ensure Strapi is exposed on a standard port if needed externally
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: ${STRAPI_DATABASE_NAME}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${STRAPI_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${STRAPI_DATABASE_PASSWORD}
      VIRTUAL_HOST: strapi.acoating.com
      LETSENCRYPT_HOST: strapi.acoating.com
      LETSENCRYPT_EMAIL: jason@mavacode.com
    depends_on:
      - postgres
    restart: always

  postgres:
    container_name: postgres
    image: postgres:12
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - proxy_app-network
    mem_limit: 128M
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always                 # Ensure the container always restarts

volumes:
  postgres-data:

networks:
  proxy_app-network:
    external: true
