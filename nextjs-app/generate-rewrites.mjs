import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const publicDirPath = path.join(__dirname, 'public');

async function generateRewrites() {
  const files = await fs.readdir(publicDirPath);
  // Filter out files that might mistakenly include query parameters in their names
  const htmlFiles = files.filter(file => file.endsWith('.html') && !file.includes('?'));

  const rewrites = htmlFiles.map(file => ({
    source: `/${file.replace('.html', '')}`,
    destination: `/${file}`,
  }));

  const nextConfigContent = `
// This file was auto-generated by generate-rewrites.mjs. Do not edit manually.
export default {
  async rewrites() {
    return ${JSON.stringify(rewrites, null, 2)};
  },
};
`;

  await fs.writeFile(path.join(__dirname, 'next.config.mjs'), nextConfigContent);
  console.log('Rewrites generated in next.config.mjs');
}

generateRewrites().catch(console.error);
